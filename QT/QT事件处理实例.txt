1.首先，定义一个事件过滤器类，用于处理特定类型的事件。在事件过滤器类中，重写QObject::eventFilter函数来处理事件：

#include <QObject>
#include <QEvent>

class MessageFilter : public QObject
{
    Q_OBJECT

public:
    explicit MessageFilter(QObject* parent = nullptr) : QObject(parent) {}

protected:
    bool eventFilter(QObject* watched, QEvent* event) override
    {
        if (event->type() == QEvent::User) {
            // 处理消息的逻辑
            // ...

            return true; // 返回true表示已处理事件
        }

        return QObject::eventFilter(watched, event);
    }
};

2.接下来，在需要处理消息的窗口类中，安装事件过滤器并进行事件过滤：

#include <QApplication>
#include <QWidget>

int main(int argc, char* argv[])
{
    QApplication app(argc, argv);

    QWidget window;

    // 创建事件过滤器
    MessageFilter filter;
    
    // 安装事件过滤器
    window.installEventFilter(&filter);

    window.show();

    return app.exec();
}

3.最后，在需要发送消息的地方，使用QCoreApplication::postEvent函数发送自定义的消息事件：

#include <QCoreApplication>
#include <QEvent>

//...

QCoreApplication::postEvent(&window, new QEvent(QEvent::User));