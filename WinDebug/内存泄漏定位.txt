1.根据内存泄漏时的输出简单定位
https://blog.csdn.net/u012947501/article/details/113698333

void EnableMemLeakCheck()
{
	int tmpFlag = _CrtSetDbgFlag(_CRTDBG_REPORT_FLAG);
	tmpFlag |= _CRTDBG_LEAK_CHECK_DF;
	_CrtSetDbgFlag(tmpFlag);
}

int main													//入口函数，可以是Dialog的OnInitDlg
{
	EnableMemLeakCheck();
	_CrtSetBreakAlloc(41592);  //41592 是出现内存泄漏时，输出窗口中｛｝中的数字
	
	//其他函数
}


2.CMD使用WinDebug工具进行定位
https://blog.csdn.net/chenlycly/article/details/121295720

gflags /i XXX.exe +ust										//调用gflags设置启用udmh.exe的堆栈跟踪
															//启动XXX.exe
umdh.exe -pn:XXX.exe -f:E:\log1.txt  						//抓取内存快照1
															//等待程序运行一会儿
umdh.exe -pn:XXX.exe -f:E:\log2.txt  						//抓取内存快照2
umdh.exe E:\log1.txt E:\log2.txt -f:E:\result.txt			//比较快照差异并存储



